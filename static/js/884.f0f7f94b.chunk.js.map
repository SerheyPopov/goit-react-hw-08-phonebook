{"version":3,"file":"static/js/884.f0f7f94b.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","components/Contacts/Contact.styled.js","components/Contacts/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","Pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const Label = styled.label`\n  width: 200px;\n  margin: auto;\n`;\n\nexport const Input = styled.input`\n  background-color: inherit;\n  width: inherit;\n`;\n\nexport const Span = styled.span`\n  ont-size: larger;\n  font-weight: 500;\n  color: #3b3a39;\n`;\n\nexport const Button = styled.button`\n    width: 100px;\n    height: 30px;\n    margin: auto;\n    background-color: inherit;\n     box-shadow: -5px -5px 7px rgba(255, 255, 255, 0.5),\n    5px 5px 7px rgba(70, 70, 70, 0.2);\n    cursor: pointer;\n    margin-bottom: 40px;\n    border: none;\n    &:hover{\n      color:green;\n    }\n   &:active {\n  transform: translateY(2px);\n  box-shadow: none;\n  \n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n  color: #3b3a39;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport { selectContacts } from '../../redux/Selectors';\nimport { addContact } from '../../redux/Operations';\nimport { Form, Label, Input, Span, Button, Title } from './Form.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const stateContacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n\n    const contact = {\n      name: form.name.value,\n      number: form.number.value,\n    };\n\n    const allertMassage = stateContacts.filter(\n      contact => contact.name.toLowerCase() === form.name.value.toLowerCase()\n    );\n\n    if (allertMassage.length !== 0) {\n      return (\n        toast.error(form.name.value + ' is already in contacts'), form.reset()\n      );\n    }\n    dispatch(addContact(contact));\n    form.reset();\n  };\n\n  return (\n    <div>\n      <Title>Phonebook</Title>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <Span>Name</Span>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          <Span>Number</Span>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n      <Toaster toastOptions={{ duration: 1500 }} />\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\nexport const Loader = styled.div`\n  width: 50px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Button = styled.button`\n  background-color: inherit;\n  border: none;\n  cursor: pointer;\n  margin-left: 20px;\n  border-radius: 50%;\n \n  box-shadow: -10px -10px 15px rgba(255, 255, 255, 0.5),\n    10px 10px 15px rgba(70, 70, 70, 0.2);\n  :hover {\n    background-color: #e8e6e6;\n \n  }\n  &:active {\n    box-shadow: none;\n  }\n`;\nexport const Name = styled.p`\n  font-size: large;\n  font-weight: 500;\n`;\n\nexport const Number = styled.p`\n  font-size: large;\n  font-weight: 500;\n`;\nexport const SubContainer = styled.div`\n  display: flex;\n`;\nexport const SubTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n  color: #3b3a39;\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectIsLoading,\n  selectError,\n  selectContacts,\n  selectFilter,\n} from '../../redux/Selectors';\nimport { deleteContact } from '../../redux/Operations';\nimport {\n  List,\n  Item,\n  Button,\n  Name,\n  Number,\n  SubContainer,\n  SubTitle,\n  Loader,\n} from './Contact.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contact = useSelector(selectContacts);\n  const contactFilter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const visiblesContact = contact\n    .filter(contact =>\n      contact.name.toLowerCase().includes(contactFilter.toLowerCase())\n    )\n    .sort((firstName, secondName) =>\n      firstName.name.localeCompare(secondName.name)\n    );\n\n  return (\n    <div>\n      <SubTitle>Contacts</SubTitle>\n      <Loader>\n        {isLoading && !error && (\n          <TailSpin\n            height=\"50\"\n            width=\"50\"\n            color=\"#575859\"\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"1\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        )}\n      </Loader>\n\n      <List>\n        {visiblesContact.map(({ name, number, id }) => (\n          <Item key={id}>\n            <Name>{name}</Name>\n            <SubContainer>\n              <Number>{number}</Number>\n              <Button onClick={() => dispatch(deleteContact(id))}>╳</Button>\n            </SubContainer>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  width: 200px;\n  margin: auto;\n  \n`;\n\nexport const Input = styled.input`\n  background-color: inherit;\n  width: inherit;\n  height: 20px;\n  margin-bottom: 30px;\n \n`;\n\nexport const Container = styled.div`\ndisplay: flex;\nflex-direction: column;`;\n\nexport const SubTitle = styled.h2`\n  text-align: center;\n  color: #3b3a39;\n  margin-bottom: 10px;\n`;\n\n\n","import { useDispatch } from 'react-redux';\n\nimport { filterContact } from '../../redux/FilterSlice';\nimport { Label, Input, Container, SubTitle } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handlChange = evt => {\n    dispatch(filterContact(evt.target.value));\n  };\n\n  return (\n    <Container>\n      <SubTitle>Find contacts by name</SubTitle>\n      <Label onChange={handlChange}>\n        <Input type=\"text\" name=\"filter\" />\n      </Label>\n    </Container>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ContactForm } from '../components/Form/Form';\nimport { ContactList } from '../components/Contacts/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { fetchContacts } from '../redux/Operations';\n\nconst MainPage = () => {\n  const dispath = useDispatch();\n\n  useEffect(() => {\n    dispath(fetchContacts());\n  }, [dispath]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\nexport default MainPage;\n"],"names":["Form","styled","Label","Input","Span","Button","Title","ContactForm","dispatch","useDispatch","stateContacts","useSelector","selectContacts","onSubmit","evt","preventDefault","form","target","contact","name","value","number","allertMassage","filter","toLowerCase","length","toast","reset","addContact","type","pattern","title","required","toastOptions","duration","List","Item","Loader","Name","Number","SubContainer","SubTitle","ContactList","contactFilter","selectFilter","isLoading","selectIsLoading","error","selectError","visiblesContact","includes","sort","firstName","secondName","localeCompare","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","map","id","onClick","deleteContact","Container","Filter","onChange","filterContact","dispath","useEffect","fetchContacts"],"sourceRoot":""}